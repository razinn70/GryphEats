{
  "name": "campus-recipe-platform",
  "private": true,
  "version": "0.1.0",
  "description": "Monorepo for campus recipe & meal planning platform (gateway + microservices + frontend)",
  "workspaces": [
    "services/*",
    "libs/*",
    "frontend",
    "backend"
  ],
  "scripts": {
    "dev:gateway": "pnpm --filter api-gateway dev",
    "dev:user": "pnpm --filter user-service dev",
    "dev:recipe": "pnpm --filter recipe-service dev",
    "dev:all": "concurrently \"pnpm dev:gateway\" \"pnpm dev:user\" \"pnpm dev:recipe\"",
    "build": "echo build aggregation placeholder (use turborepo later)",
    "lint": "eslint . --ext .ts,.tsx",
    "format": "prettier --write .",
    "prisma:generate": "prisma generate",
  "prisma:migrate:dev": "prisma migrate dev --name init",
  "typecheck": "tsc -b || true",
  "gen:openapi:user": "node -e \"const {generateOpenApiJson}=require('api-schemas');const fs=require('fs');fs.writeFileSync('services/user-service/openapi.gen.json',generateOpenApiJson());console.log('User OpenAPI generated');\"",
  "perf:baseline": "k6 run perf/k6-baseline.js",
  "diagram:generate": "mmdc -i ops/docs/diagrams/system-architecture.mmd -o ops/docs/diagrams/system-architecture.svg && mmdc -i ops/docs/diagrams/system-architecture.mmd -o ops/docs/diagrams/system-architecture.png"
  },
  "devDependencies": {
    "concurrently": "^9.0.1",
    "typescript": "^5.6.3",
    "ts-node": "^10.9.2",
    "@types/node": "^22.7.5",
    "@typescript-eslint/parser": "^8.8.0",
    "@typescript-eslint/eslint-plugin": "^8.8.0",
    "eslint": "^9.10.0",
    "eslint-plugin-import": "^2.29.1",
  "prettier": "^3.3.3",
  "prisma": "^5.19.0",
  "@mermaid-js/mermaid-cli": "^10.9.1",
  "puppeteer": "^21.11.0"
  },
  "dependencies": {
    "@prisma/client": "^5.19.0"
  }
}
